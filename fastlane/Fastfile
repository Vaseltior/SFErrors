# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.51.0"

default_platform :ios


platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    
    
    # increment_build_number
	
    xctool :test, [
      "--project", "'SFErrors.xcodeproj'",
      "--scheme", "'SFErrors'",
      "--configuration", "Release",
      "--sdk", "iphonesimulator",
      "--arch", "i386"
    ].join(" ")
  end

  desc "Runs all the tests"
  lane :test do
    # snapshot
    scan(
	  scheme: "SFErrors",
	  clean: true
	)
	#slather(
	#  build_directory: 'slather',
	#  input_format: 'bah',
	#  scheme: 'SFErrors',
	#  proj: 'SFErrors.xcodeproj'
	#)
	#gcovr(
	#  html: true,
	#  html_details: true,
	#  output: "./code-coverage/report.html"
	#)
	lcov(
	  project_name: "SFErrors",
	  scheme: "SFErrors",
	  #output_dir: "cov_reports" # This value is optional. Default is coverage_reports
	)
	#swiftlint(
	#  output_file: 'swiftlint.result.json', # The path of the output file (optional)
	#  config_file: '.swiftlint-ci.yml'      # The path of the configuration file (optional)
	#)
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # sigh
    gym # Build your app - more options available
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the App Store"
  lane :deploy do
    # snapshot
    # sigh
    gym # Build your app - more options available
    # deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end



# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
